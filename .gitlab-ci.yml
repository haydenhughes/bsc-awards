stages:
  - test
  - build
  - deploy

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master
    - staging

build-arm:
  tags:
    - arm
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-arm" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-arm"
  only:
    - master
    - staging

test:
  stage: test
  image: python:3
  services:
    - postgres:latest
  variables:
    POSTGRES_PASSWORD: pass
    DATABASE_URI: postgresql://postgres:pass@postgres/postgres
    AWARDS_USERNAME: admin
    AWARDS_PASSWORD: admin
  script:
    - python3 -m pip install -r requirements.txt
    - python3 -m pip install coverage
    - python3 -m coverage run -m unittest discover -s test
    - python3 -m coverage html
    - python3 -m coverage report
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    paths: [htmlcov/]

sast:
  stage: test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - setup_docker
    - sast
  artifacts:
    paths: [gl-sast-report.json]
  only:
    - branches
  except:
    variables:
      - $SAST_DISABLED

dependency_scanning:
  stage: test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - setup_docker
    - dependency_scanning
  artifacts:
    paths: [gl-dependency-scanning-report.json]
  only:
    - branches
  except:
    variables:
      - $DEPENDENCY_SCANNING_DISABLED

container_scanning:
  stage: test
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - setup_docker
    - container_scanning
  artifacts:
    paths: [gl-container-scanning-report.json]
  only:
    - branches
  except:
    variables:
      - $CONTAINER_SCANNING_DISABLED

pages:
  stage: deploy
  allow_failure: true
  dependencies:
    - test
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
    - staging

deploy-latest:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

deploy-arm:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-arm"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-arm" "$CI_REGISTRY_IMAGE:arm"
    - docker push "$CI_REGISTRY_IMAGE:arm"
  only:
    - master